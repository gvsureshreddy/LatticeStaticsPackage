#!/usr/um/bin/perl -w
#
#

chomp($dataset=`pwd`);
@directories = qw(Princ
		  NaCl
		  Rhombo1
		  Ortho1
		  Ortho2
		  Ortho3
		  OrthoNaCl
		  Mono1
		  Mono2);

open(GNUPLOT,">$ARGV[1]") 
    || die "Unable to open $ARGV[1] for write: $!";

print GNUPLOT "# gnuplot data file for ${dataset}\n#\n";
print GNUPLOT "# Index 0\n";
print GNUPLOT "# Bifurcation Points\n";
printf GNUPLOT "#%20s %20s %20s %20s %20s %20s %20s %20s %20s %20s %20s %20s\n",
    "Temperature","Potential","U11","U12","U13","U22","U23","U33",
    "Min EigVal","Num Neg Eig Vals","Rank 1 Convex","Uncertainty";


$endgnuplot = "";

$index = 1;
foreach $dir (@directories)
{
    chdir $dataset;
    loaddata($dataset . "/" . $dir ,$ARGV[0],*GNUPLOT,$index,\$endgnuplot);
    $index += 2;
}

print GNUPLOT "\n\n", $endgnuplot;

close(GNUPLOT);


# Subroutine loaddata.
#    read in data file, print bifurcation points to output
#    file, print stable sections to "stable temp file",
#    print unstable sections to "unstable temp file".
#
# Note: subroutine leaves current directory changed.
#
# $_[0] -- Directory name
# $_[1] -- Data file name
# $_[2] -- Final output file handle
# $_[3] -- Gnuplot data file Index for stable section
#          Note (unstable section index +1)
# $_[4] -- reference to variable holding all stable and unstable
#          sections (indicies)
#
sub loaddata {
    my(@fields,@temp,@U11,@U12,@U13,@U22,@U23,@U33,
       @potential,@mineigval,@noneg,@uncertainty,
       $stableflag,$stable_nodata,$unstable_nodata);
    my($gnuplot,$endgnuplot);
    $gnuplot = $_[2];
    $endgnuplot = $_[4];
    $stable = "";
    $unstable = "";

    #chdir $_[0] || die "No $_[0] Directory, $!";
    chdir $_[0];

    # flag to make sure there is data in the index
    $stable_nodata = 1;
    $unstable_nodata = 1;

    if (-e $_[1])
    {
	open(DATA,$_[1]) || die "No file, \"$_[0]\": $_[1], $!";

	$_ = <DATA>;
	while (! m/^Mode:/)
	{
	    $_ = <DATA>;
	}

	while (<DATA>)
	{
	    if ( /^Temperature/)
	    {
		@fields=split(/:/,$_);
		push(@temp,$fields[1]);
	    }

	    if ( /^Pressure/)
	    {
		@fields=split(/:/,$_);
		$pressure=$fields[1];
	    }
	    
	    if ( /^Deformation/)
	    {
		$_ = <DATA>;
		@fields = split;
		push(@U11,$fields[0]);
		push(@U12,$fields[1]);
		push(@U13,$fields[2]);
		$_ = <DATA>;
		@fields = split;
		push(@U22,$fields[1]);
		push(@U23,$fields[2]);
		$_ = <DATA>;
		@fields = split;
		push(@U33,$fields[2]);
	    }
	    
	    if (/^Potential/)
	    {
		@fields = split(/:/,$_);
		push(@potential,$fields[1]);
	    }
	    
	    if (/^Bifurcation/)
	    {
		@fields = split;
		push(@mineigval,$fields[2]);
		push(@noneg,$fields[3]);
	    }

	    if (/^Rank 1 Convex/)
	    {
		@fields = split(/:/,$_);
		push(@Convex,$fields[1]);
	    }

	    if (/^Uncertainty/)
	    {
		@fields = split(/=/,$_);
		push(@uncertainty,$fields[1]);
	    }
	}
	
	close(DATA);
    }
    else
    {
	print "No file, \"$_[1]\" in $_[0]!\n";
    }

    $stable .= sprintf "# Index $_[3]\n";
    $stable .= sprintf "# Stable sections of $_[0] branch at Pressure $pressure\n";
    $stable .= sprintf "#%20s %20s %20s %20s %20s %20s %20s %20s %20s %20s %20s %20s\n",
    "Temperature","Potential","U11","U12","U13","U22","U23","U33",
    "Min EigVal","Num Neg Eig Vals","Rank 1 Convex","Uncertainty";
    $unstable .= sprintf "# Index " . ($_[3]+1) . "\n";
    $unstable .= sprintf "# Unstable sections of $_[0] branch at Pressure $pressure\n";
    $unstable .= sprintf "#%20s %20s %20s %20s %20s %20s %20s %20s %20s %20s %20s %20s\n",
    "Temperature","Potential","U11","U12","U13","U22","U23","U33",
    "Min EigVal","Num Neg Eig Vals","Rank 1 Convex","Uncertainty";
    
    $stableflag=$noneg[0];
    while(defined($temp[0]))
    {
	# Bifurcation Point
	if (defined($noneg[1]) && $stableflag != $noneg[1])
	{
	    printf $gnuplot "%20.12f %20.12f %20.12f %20.12f %20.12f %20.12f" .
		" %20.12f %20.12f %20.12f %20.12f %20.12f %20.12f\n",
		$temp[0],$potential[0],$U11[0],$U12[0],
		$U13[0],$U22[0],$U23[0],$U33[0],
		$mineigval[0],$noneg[0],$Convex[0],$uncertainty[0];

	    # Add blank line in corresponding file to seperate segments
	    # and connecting line of data
	    if ($noneg[1] == 0)
	    {
		$stable .= sprintf "\n";
		$stable .= sprintf
		    "%20.12f %20.12f %20.12f %20.12f %20.12f %20.12f"
			. " %20.12f %20.12f %20.12f %20.12f %20.12f %20.12f\n",
			$temp[0],$potential[0],$U11[0],$U12[0],
			$U13[0],$U22[0],$U23[0],$U33[0],
			$mineigval[0],$noneg[0],$Convex[0],$uncertainty[0];
	    }
	    elsif ($stableflag == 0)
	    {
		$unstable .= sprintf "\n";
		$unstable .= sprintf
		    "%20.12f %20.12f %20.12f %20.12f %20.12f %20.12f"
			. " %20.12f %20.12f %20.12f %20.12f %20.12f %20.12f\n",
			$temp[0],$potential[0],$U11[0],$U12[0],
			$U13[0],$U22[0],$U23[0],$U33[0],
			$mineigval[0],$noneg[0],$Convex[0],$uncertainty[0];
	    }
	}

	# Print data line into correct file and continue
	if ($stableflag == 0)
	{
	    $stable_nodata = 0;
	    $stable .= sprintf
		"%20.12f %20.12f %20.12f %20.12f %20.12f %20.12f" .
		    " %20.12f %20.12f %20.12f %20.12f %20.12f %20.12f\n",
		    shift(@temp),shift(@potential),shift(@U11),shift(@U12),
		    shift(@U13),shift(@U22),shift(@U23),shift(@U33),
		    shift(@mineigval),shift(@noneg),shift(@Convex),
		    shift(@uncertainty);
	}
	else
	{
	    $unstable_nodata = 0;
	    $unstable .= sprintf
		"%20.12f %20.12f %20.12f %20.12f %20.12f %20.12f" .
		    " %20.12f %20.12f %20.12f %20.12f %20.12f %20.12f\n",
		    shift(@temp),shift(@potential),shift(@U11),shift(@U12),
		    shift(@U13),shift(@U22),shift(@U23),shift(@U33),
		    shift(@mineigval),shift(@noneg),shift(@Convex),
		    shift(@uncertainty);
	}

	$stableflag = $noneg[0];
    }

    # Make sure there is at least one data point in each index
    if ($stable_nodata)
    {
	$stable .= sprintf "%20.12f %20.12f %20.12f %20.12f %20.12f %20.12f" .
	    " %20.12f %20.12f %20.12f %20.12f %20.12f %20.12f\n",
	    0,0,0,0,0,0,0,0,0,0,0,0;
    }
    if ($unstable_nodata)
    {
	$unstable .= sprintf
	    "%20.12f %20.12f %20.12f %20.12f %20.12f %20.12f" .
		" %20.12f %20.12f %20.12f %20.12f %20.12f %20.12f\n",
		0,0,0,0,0,0,0,0,0,0,0,0;
    }

    $$endgnuplot .= $stable . "\n\n" . $unstable . "\n\n";
}
