# -*- mode: makefile -*-
#**************************************************************************
#**************************************************************************

VPATH = bin lib depend

UNAME      = $(shell uname)

SRC_EXT    = .cpp
OBJ_EXT    = .o
DEP_EXT    = .d
BUILD_DATE = \"`date +%c;` from git commit `git rev-parse HEAD`\"

# Compiling options, etc. #################################################
#
gCXX        = g++

ifeq ($(UNAME),Darwin)
   # gCC compiler
   CXX         = $(gCXX)
   OPTIMIZE   = -O
   ANSI       = -pedantic -Wall
endif

ifeq ($(UNAME),Linux)
   # PGI compiler
   #CXX         = pgCC
   #OPTIMIZE   = -fast -Minline=levels:10 --no_exceptions
   #ANSI       = -A -Minform=inform
   CXX = $(gCXX)
   OPTIMIZE = -O
   ANSI = -pedantic -Wall
endif

# general options
#PURE       = purify
#PROFILE    = -pg
#DEBUG      = -g
#BOUNDS     = -DCHECK_BOUNDS
TERMINAL   = -DUNIX_TERMINAL
DATE_DEF   = -DBUILD_DATE="$(BUILD_DATE)"
#SOLVE      = -DSOLVE_SVD

# Lattice include options (comment out to exclude the Lattice type)
#USE_NEO  = -DUSE_NEO
#USE_KIM  = -DUSE_KIM
#USE_FEAP = -DUSE_FEAP
#USE_QC   = -DUSE_QC

# various compile options
CXX_PERL     = `$(PERL) -MExtUtils::Embed -e ccopts | sed -e 's/-arch[^-]*//g' | sed -e 's/-Wdeclaration-after-statement//g'`
LIBS_PERL   = `$(PERL) -MExtUtils::Embed -e ldopts | sed -e 's/-arch[^-]*//g' | sed -e 's/-Wdeclaration-after-statement//g'`
ifneq (,$(strip $(USE_NEO)))
  CXXFLAGS_NEO = -I../neo-hookean
  LFLAGS_NEO = -L../neo-build
  LIBS_NEO = -lneo-hookean
else
  CXXFLAGS_NEO =
  LFLAGS_NEO =
  LIBS_NEO =
endif
FEAP_OK := $(shell if test -e $(FEAPHOME8_3)/Feap8_3.a; then echo YES; else echo NO; fi)
ifneq (,$(strip $(USE_FEAP)))
  ifeq (NO,$(strip $(FEAP_OK)))
    $(error You must set the environment variable FEAPHOME8_3 and compile the library)
  endif
  LIBS_FEAP = $(FEAPHOME8_3)/Feap8_3.a -lgfortran -L/usr/local/Cellar/gcc/5.2.0/lib/gcc/5/ -lX11  -L/opt/X11/lib
else
  LIBS_FEAP =
endif
ifneq (,$(strip $(USE_KIM)))
  KIM_CONFIG_HELPER = kim-api-build-config
  ifeq ($(shell $(KIM_CONFIG_HELPER) --version),)
    $(error $(KIM_CONFIG_HELPER) utility is not available.  Something is wrong with your KIM API package setup)
  endif
  CXX_KIM     = $(shell $(KIM_CONFIG_HELPER) --includes)
  LIBS_KIM = $(shell $(KIM_CONFIG_HELPER) --ldflags) $(shell $(KIM_CONFIG_HELPER) --ldlibs)
else
  CXX_KIM =
  LIBS_KIM =
endif
LIBS       = -lLinearAlgebra -lMyMath -lm $(LIBS_PERL) $(LIBS_FEAP) $(LIBS_KIM) $(LIBS_NEO)
LFLAGS     = $(DEBUG) $(PROFILE) $(OPTIMIZE) $(DATE_DEF) $(LIBS_PERL) $(LFLAGS_NEO)
CXXFLAGS    = $(ANSI) $(DEBUG) $(PROFILE) $(OPTIMIZE) $(BOUNDS) $(SOLVE) $(TERMINAL) $(CXX_PERL) $(CXX_KIM) $(CXXFLAGS_NEO)


# File Locations ##########################################################
BIN_LOC    = ${HOME}/bin
INCL_LOC   = ${HOME}/include
LIB_LOC    = ${HOME}/lib
SUBDIRS = ../Lattices ../Restrictions ../Potentials
#
# Defines the source files needed #########################################
include Makefile
include ../Lattices/Makefile
ifeq (,$(strip $(USE_NEO)))
  LATTICES := $(filter-out NeoHookean2D.cpp,$(LATTICES))
endif
ifeq (,$(strip $(USE_FEAP)))
  LATTICES := $(filter-out FEAP.cpp,$(LATTICES))
endif
ifeq (,$(strip $(USE_KIM)))
  LATTICES := $(filter-out MultiLatticeKIM.cpp,$(LATTICES))
endif
ifeq (,$(strip $(USE_QC)))
  LATTICES := $(filter-out QC.cpp,$(LATTICES))
endif
include ../Restrictions/Makefile
include ../Potentials/Makefile

BSCSOURCES  = $(addprefix ./,$(UTILITY))
RK1SOURCES  = ./Rank1Convex.cpp
DISPERSIONSOURCES = ./DispersionCurves.cpp
LONGWAVELENGTH = ./LongWavelengthModuli.cpp
BLOCHWAVESOURCES = ./BlochWave.cpp
NEIGHBORSSOURCES = ./NeighborDistances.cpp
PRINTPOTENTIALS = ./PrintPotentials.cpp
ENERGYLANDSCAPE = ./EnergyLandscape.cpp
TWOBARTRUSS = ./TwoBarTrussModel.cpp
#
ALLSOURCES  = $(BSCSOURCES) $(RK1SOURCES) $(DISPERSIONSOURCES) \
	      $(BLOCHWAVESOURCES) $(NEIGHBORSSOURCES) $(LONGWAVELENGTH) $(PRINTPOTENTIALS) \
	      $(ENERGYLANDSCAPE) $(TWOBARTRUSS)


# Defines the object files to be created using the SYSTEM name ############
STRIPEDSOURCES = $(notdir $(BSCSOURCES))
BSCOBJECTS  = $(STRIPEDSOURCES:$(SRC_EXT)=$(OBJ_EXT))
RK1OBJECTS  = $($(notdir RK1SOURCES):$(SRC_EXT)=$(OBJ_EXT))
DISPERSIONOBJECTS = $($(notdir DISPERSIONSOURCES):$(SRC_EXT)=$(OBJ_EXT))
WAVELENGTHOBJECTS = $($(notdir LONGWAVELENGTH):$(SRC_EXT)=$(OBJ_EXT))
BLOCHWAVEOBJECTS = $($(notdir BLOCHWAVESOURCES):$(SRC_EXT)=$(OBJ_EXT))
NEIGHBORSOBJECTS = $($(notdir NEIGHBORSSOURCES):$(SRC_EXT)=$(OBJ_EXT))
PRINTPOTSOBJECTS = $($(notdir PRINTPOTENTIALS):$(SRC_EXT)=$(OBJ_EXT))
ENERGYLANDOBJECTS = $($(notdir ENERGYLANDSCAPE):$(SRC_EXT)=$(OBJ_EXT))
TWOBARTRUSSOBJECTS = $($(notdir TWOBARTRUSS):$(SRC_EXT)=$(OBJ_EXT))
#
ALLOBJECTS = $(BSCOBJECTS) $(RK1OBJECTS) $(DISPERSIONOBJECTS) \
	     $(BLOCHWAVEOBJECTS) $(NEIGHBORSOBJECTS) $(WAVELENGTHOBJECTS) $(PRINTPOTSOBJECTS) \
	     $(ENERGYLANDOBJECTS) $(TWOBARTRUSSOBJECTS)

ALLPROGRAMS = Rank1Convex DispersionCurves BlochWave NeighborDistances\
              LongWavelengthModuli PrintPotentials EnergyLandscape TwoBarTrussModel

all: $(ALLPROGRAMS)

# Defines the Program Target (linking command) ############################
Rank1Convex:  $(RK1OBJECTS) $(BSCOBJECTS)
	      $(CXX) $(CXXFLAGS) $(DATE_DEF) -o ./lib/builddate.o -c builddate.cpp
	      $(PURE) $(CXX) $(LFLAGS) \
	      -L$(LIB_LOC) -o ./bin/Rank1Convex \
	      $(addprefix lib/,$(RK1OBJECTS)) \
	      $(addprefix lib/,$(BSCOBJECTS)) $(LIBS) ./lib/builddate.o
	      /bin/rm -f ./lib/builddate.o

# Defines the Program Target (linking command) ############################
DispersionCurves:     $(DISPERSIONOBJECTS) $(BSCOBJECTS) \
		      $(addprefix ../lib/,$(LATTICES:$(SRC_EXT)=$(OBJ_EXT))) \
		      $(addprefix ../lib/,$(POTENTIALS:$(SRC_EXT)=$(OBJ_EXT)))
		      $(CXX) $(CXXFLAGS) $(DATE_DEF) -o ./lib/builddate.o -c builddate.cpp
		      $(PURE) $(CXX) $(LFLAGS) \
		      -L$(LIB_LOC) -o ./bin/DispersionCurves \
		      $(addprefix lib/,$(DISPERSIONOBJECTS)) \
		      $(addprefix lib/,$(BSCOBJECTS)) \
		      $(addprefix ../lib/,$(LATTICES:$(SRC_EXT)=$(OBJ_EXT))) \
		      $(addprefix ../lib/,$(POTENTIALS:$(SRC_EXT)=$(OBJ_EXT))) \
		      $(LIBS) ./lib/builddate.o
		      /bin/rm -f ./lib/builddate.o

# Defines the Program Target (linking command) ############################
LongWavelengthModuli: $(WAVELENGTHOBJECTS) $(BSCOBJECTS) \
		      $(addprefix ../lib/,$(LATTICES:$(SRC_EXT)=$(OBJ_EXT))) \
		      $(addprefix ../lib/,$(POTENTIALS:$(SRC_EXT)=$(OBJ_EXT)))
		      $(CXX) $(CXXFLAGS) $(DATE_DEF) -o ./lib/builddate.o -c builddate.cpp
		      $(PURE) $(CXX) $(LFLAGS) \
		      -L$(LIB_LOC) -o ./bin/LongWavelengthModuli \
		      $(addprefix lib/,$(WAVELENGTHOBJECTS)) \
		      $(addprefix lib/,$(BSCOBJECTS)) \
		      $(addprefix ../lib/,$(LATTICES:$(SRC_EXT)=$(OBJ_EXT))) \
		      $(addprefix ../lib/,$(POTENTIALS:$(SRC_EXT)=$(OBJ_EXT))) \
		      $(LIBS) ./lib/builddate.o
		      /bin/rm -f ./lib/builddate.o

# Defines the Program Target (linking command) ############################
BlochWave:	      $(BLOCHWAVEOBJECTS) $(BSCOBJECTS) \
		      $(addprefix ../lib/,$(LATTICES:$(SRC_EXT)=$(OBJ_EXT))) \
		      $(addprefix ../lib/,$(POTENTIALS:$(SRC_EXT)=$(OBJ_EXT)))
		      $(CXX) $(CXXFLAGS) $(DATE_DEF) -o ./lib/builddate.o -c builddate.cpp
		      $(PURE) $(CXX) $(LFLAGS) \
		      -L$(LIB_LOC) -o ./bin/BlochWave \
		      $(addprefix lib/,$(BLOCHWAVEOBJECTS)) \
		      $(addprefix lib/,$(BSCOBJECTS)) \
		      $(addprefix ../lib/,$(LATTICES:$(SRC_EXT)=$(OBJ_EXT))) \
		      $(addprefix ../lib/,$(POTENTIALS:$(SRC_EXT)=$(OBJ_EXT))) \
		      $(LIBS) ./lib/builddate.o
		      /bin/rm -f ./lib/builddate.o

# Defines the Program Target (linking command) ############################
NeighborDistances:    $(NEIGHBORSOBJECTS) $(BSCOBJECTS) \
		      $(addprefix ../lib/,$(LATTICES:$(SRC_EXT)=$(OBJ_EXT))) \
		      $(addprefix ../lib/,$(POTENTIALS:$(SRC_EXT)=$(OBJ_EXT)))
		      $(CXX) $(CXXFLAGS) $(DATE_DEF) -o ./lib/builddate.o -c builddate.cpp
		      $(PURE) $(CXX) $(LFLAGS) \
		      -L$(LIB_LOC) -o ./bin/NeighborDistances \
		      $(addprefix lib/,$(NEIGHBORSOBJECTS)) \
		      $(addprefix lib/,$(BSCOBJECTS)) \
		      $(addprefix ../lib/,$(LATTICES:$(SRC_EXT)=$(OBJ_EXT))) \
		      $(addprefix ../lib/,$(POTENTIALS:$(SRC_EXT)=$(OBJ_EXT))) \
		      $(LIBS) ./lib/builddate.o
		      /bin/rm -f ./lib/builddate.o

# Defines the Program Target (linking command) ############################
PrintPotentials:      $(PRINTPOTSOBJECTS) $(BSCOBJECTS) \
		      $(addprefix ../lib/,$(POTENTIALS:$(SRC_EXT)=$(OBJ_EXT)))
		      $(PURE) $(CXX) $(LFLAGS) \
		      -L$(LIB_LOC) -o ./bin/PrintPotentials \
		      $(addprefix lib/,$(PRINTPOTSOBJECTS)) \
		      $(addprefix lib/,$(BSCOBJECTS)) \
		      $(addprefix ../lib/,$(POTENTIALS:$(SRC_EXT)=$(OBJ_EXT))) \
		      $(LIBS)

# Defines the Program Target (linking command) ############################
EnergyLandscape:      $(ENERGYLANDOBJECTS) $(BSCOBJECTS) \
		      $(addprefix ../lib/,$(LATTICES:$(SRC_EXT)=$(OBJ_EXT))) \
		      $(addprefix ../lib/,$(RESTRICTIONS:$(SRC_EXT)=$(OBJ_EXT))) \
		      $(addprefix ../lib/,$(POTENTIALS:$(SRC_EXT)=$(OBJ_EXT)))
		      $(CXX) $(CXXFLAGS) $(DATE_DEF) -o ./lib/builddate.o -c builddate.cpp
		      $(PURE) $(CXX) $(LFLAGS) \
		      -L$(LIB_LOC) -o ./bin/EnergyLandscape \
		      $(addprefix lib/,$(ENERGYLANDOBJECTS)) \
		      $(addprefix lib/,$(BSCOBJECTS)) \
		      $(addprefix ../lib/,$(LATTICES:$(SRC_EXT)=$(OBJ_EXT))) \
		      $(addprefix ../lib/,$(RESTRICTIONS:$(SRC_EXT)=$(OBJ_EXT))) \
		      $(addprefix ../lib/,$(POTENTIALS:$(SRC_EXT)=$(OBJ_EXT))) \
		      $(LIBS) ./lib/builddate.o
		      /bin/rm -f ./lib/builddate.o

# Defines the Program Target (linking command) ############################
TwoBarTrussModel:     $(TWOBARTRUSSOBJECTS) $(BSCOBJECTS) \
		      ../lib/TwoBarTruss$(OBJ_EXT)
		      $(CXX) $(CXXFLAGS) $(DATE_DEF) -o ./lib/builddate.o -c builddate.cpp
		      $(PURE) $(CXX) $(LFLAGS) \
		      -L$(LIB_LOC) -o ./bin/TwoBarTrussModel \
		      $(addprefix lib/,$(TWOBARTRUSSOBJECTS)) \
		      ../lib/Lattice$(OBJ_EXT) ../lib/TwoBarTruss$(OBJ_EXT) \
		      ./lib/PerlInput$(OBJ_EXT) ./lib/UtilityFunctions$(OBJ_EXT)\
		      $(LIBS) ./lib/builddate.o
		      /bin/rm -f ./lib/builddate.o

# include the dependicies
include $(addprefix depend/,$(BSCOBJECTS:$(OBJ_EXT)=$(DEP_EXT)))
include $(addprefix depend/,$(RK1OBJECTS:$(OBJ_EXT)=$(DEP_EXT)))
include $(addprefix depend/,$(DISPERSIONOBJECTS:$(OBJ_EXT)=$(DEP_EXT)))
include $(addprefix depend/,$(WAVELENGTHOBJECTS:$(OBJ_EXT)=$(DEP_EXT)))
include $(addprefix depend/,$(BLOCHWAVEOBJECTS:$(OBJ_EXT)=$(DEP_EXT)))
include $(addprefix depend/,$(NEIGHBORSOBJECTS:$(OBJ_EXT)=$(DEP_EXT)))
include $(addprefix depend/,$(PRINTPOTSOBJECTS:$(OBJ_EXT)=$(DEP_EXT)))
include $(addprefix depend/,$(ENERGYLANDOBJECTS:$(OBJ_EXT)=$(DEP_EXT)))
include $(addprefix depend/,$(TWOBARTRUSSOBJECTS:$(OBJ_EXT)=$(DEP_EXT)))

# Define object file dependicies and make rule
./lib/PerlInput.o: Makefile
	$(CXX) $(CXXFLAGS) \
        -I. $(addprefix -I ,$(SUBDIRS)) -I $(INCL_LOC)/ \
        -o ./lib/$(notdir $@) \
        -c PerlInput.cpp

$(filter-out PerlInput.o, $(ALLOBJECTS)): Makefile MakeUtilityProgs
	$(CXX) $(CXXFLAGS) -I. $(addprefix -I ,$(SUBDIRS)) -I $(INCL_LOC)/ \
        $(USE_FEAP) $(USE_KIM) $(USE_QC) $(USE_NEO)\
        -o ./lib/$(notdir $@) \
        -c $(filter %/$(*),$(basename $(ALLSOURCES)))$(SRC_EXT)



.PHONY: uninstall
# Define install
install: $(addprefix $(BIN_LOC)/,$(ALLPROGRAMS))

$(addprefix $(BIN_LOC)/,$(ALLPROGRAMS)): $(BIN_LOC)/%: %
	/bin/cp bin/$(notdir $@) $(BIN_LOC)

# Define uninstall
uninstall:
	/bin/rm -f $(BIN_LOC)/DispersionCurves
	/bin/rm -f $(BIN_LOC)/Rank1Convex
	/bin/rm -f $(BIN_LOC)/LongWavelengthModuli
	/bin/rm -f $(BIN_LOC)/BlochWave
	/bin/rm -f $(BIN_LOC)/NeighborDistances
	/bin/rm -f $(BIN_LOC)/PrintPotentials
	/bin/rm -f $(BIN_LOC)/EnergyLandscape
	/bin/rm -f $(BIN_LOC)/TwoBarTrussModel

# Removes the current systems set of object files and executable file
.PHONY: clean

clean:
	 -/bin/rm -f $(addprefix lib/,$(BSCOBJECTS:$(OBJ_EXT)=.*)) \
		  $(addprefix lib/,$(RK1OBJECTS:$(OBJ_EXT)=.*)) \
		  $(addprefix lib/,$(DISPERSIONOBJECTS:$(OBJ_EXT)=.*)) \
		  $(addprefix lib/,$(WAVELENGTHOBJECTS:$(OBJ_EXT)=.*)) \
		  $(addprefix lib/,$(BLOCHWAVEOBJECTS:$(OBJ_EXT)=.*)) \
		  $(addprefix lib/,$(NEIGHBORSOBJECTS:$(OBJ_EXT)=.*)) \
		  $(addprefix lib/,$(PRINTPOTSOBJECTS:$(OBJ_EXT)=.*)) \
		  $(addprefix lib/,$(ENERGYLANDOBJECTS:$(OBJ_EXT)=.*)) \
		  $(addprefix lib/,$(TWOBARTRUSSOBJECTS:$(OBJ_EXT)=.*)) \
		  bin/DispersionCurves \
		  bin/Rank1Convex \
		  bin/LongWavelengthModuli \
		  bin/BlochWave \
		  bin/NeighborDistances \
		  bin/PrintPotentials \
		  bin/EnergyLandscape \
		  bin/TwoBarTrussModel \
		  core *~ \
		  depend/*.d

# Define rule for dependicy files
depend/%.d: %$(SRC_EXT)
	@$(SHELL) -ec '$(gCXX) -MM -I. $(addprefix -I ,$(SUBDIRS)) \
	      -I $(INCL_LOC)/ $(CXXFLAGS) $< \
	      | sed '\''s/\($(notdir $*)\)\.o[ :]*/\1.o $(notdir $*).d : /g'\'' \
	      > $@; [ -s $@ ] || rm -f $@'
	@echo "Building $@"
