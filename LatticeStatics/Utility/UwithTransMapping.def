virtual inline int Fsize() const
{
   return 6;
}
virtual inline int Ssize() const
{
   return DIM3 * InternalAtoms_;
}
virtual inline int NoTrans() const
{
   return 0;
}

virtual inline int INDF(int const& i, int const& j) const
{
   if (i == j)
   {
      return i;
   }
   else
   {
      return 2 + i + j;
   }
}

virtual inline int INDS(int const& i, int const& j) const
{
   return 6 + i * 3 + j;
}

virtual inline int INDFF(int const& k, int const& l, int const& m, int const& n) const
{
   if (k == l)
   {
      if (m == n)
      {
         return DOFS() * k + m;
      }
      else
      {
         return DOFS() * k + 2 + m + n;
      }
   }
   else
   {
      if (m == n)
      {
         return DOFS() * (2 + k + l) + m;
      }
      else
      {
         return DOFS() * (2 + k + l) + 2 + m + n;
      }
   }
}

virtual inline int INDSS(int const& k, int const& l, int const& m, int const& n) const
{
   return 6 * DOFS() + 6
          + DOFS() * (k * 3 + l)
          + (m * 3 + n);
}

virtual inline int INDFS(int const& i, int const& j, int const& m, int const& n) const
{
   if (i == j)
   {
      return DOFS() * i + 6 + m * 3 + n;
   }
   else
   {
      return DOFS() * (2 + i + j) + 6 + m * 3 + n;
   }
}

virtual inline int INDSF(int const& m, int const& n, int const& i, int const& j) const
{
   if (i == j)
   {
      return 6 * DOFS() + DOFS() * (m * 3 + n) + i;
   }
   else
   {
      return 6 * DOFS() + DOFS() * (m * 3 + n) + 2 + i + j;
   }
}
